.\" Automatically generated by Pandoc 2.5
.\"
.TH "_PRINTF" "1" "The 11th of March, 2022" "printf 1.0.0" "User Manual"
.hy
.SH NAME
.PP
_printf \- this function is used for printing data input.
.SH SYNOPSIS
.PP
\f[B]man printf\f[R] [\f[I]OPTION\f[R]]\&...
.SH DESCRIPTION
.PP
**_printf** produces output according to a format
.SH OPTIONS
.TP
.B \f[B]\-h\f[R]
display help message
.TP
.B \f[B]\-n\f[R]
name of the person to say hello to
.SH EXAMPLES
.PP
** To print \[lq]Hello doc !\[rq] use:
.PP
#include \[lq]main.h\[rq]
.TP
.B _printf(\[lq]%s\[rq], \[lq]Hello doc !\[rq]);
To print \[lq]My favorite number is, 42\[rq] use:
.PP
#include \[lq]main.h\[rq]
.PP
_printf(\[lq]%s, %d\[rq], \[lq]My favorite number is\[rq], 42);**
.SH BUGS
.PP
Submit bug reports online at: <4330@holbertonschool.com>
.SH SEE ALSO
.PP
\&.
Full documentation and sources at: <>
.SH PROTOTYPE H.FILE
.PP
** int _printf(const char *format, \&...);**
.PP
** Print ARGUMENT(s) according to FORMAT as a string before the
\[lq]%\[rq]
.PP
\&.
Return the number of characters printed (excluded the null byte)
.SH FORMAT: string of characters.
.PP
\&.
The format string is composed of zero or more directives.
See man 3 printf.
.PP
\&.
Converter
.PP
\&.[c] Character.
.PP
\&.[d] or [i]: decimal integer.
.PP
\&.
[e] Scientific notation (mantissa/exponent) using e character.
.PP
\&.
[E] Scientific notation (mantissa/exponent) using E character.
.PP
\&.
[f] Decimal floating point.
.PP
\&.
[g] Uses the shorter of %e or %f.
.PP
\&.
[G] Uses the shorter of %E or %f.
.PP
\&.
[o] Octal.
.PP
\&.
[s] String of character.
.PP
\&.
[u] Unsigned decimal integer.
.PP
\&.
[x] Unsigned hexadecimal integer.
.PP
\&.
[x] Unsigned hexadecimal integer (capital letters).
.PP
\&.
[p] Pointer .
.PP
\&.
[n] Nothing printed.
.PP
\&.
[%] Character.
.PP
\&.
[none] print normally (right justify, space fill)
.PP
\&.
[\-] left justify
.PP
\&.
[0] leading zero fill
.PP
\&.
[+] print plus on numbers.
.SH AUTHORS: Written by Nicolas Boute and Siham Badyine for Holberton School
